{
  "url": "https://web.archive.org/web/20100423054747/http://msdn.microsoft.com/en-us/library/bb313962.aspx",
  "original_url": "http://msdn.microsoft.com/en-us/library/bb313962.aspx",
  "title": "Swizzling (xvs_3_0, xps_3_0)",
  "status_code": 302,
  "success": true,
  "scraped_at": 1756584731.156356,
  "category": "section",
  "html": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\" style=\"--wm-toolbar-height: 67px;\"><head id=\"ctl00_Head1\"><script src=\"//archive.org/includes/athena.js\" type=\"text/javascript\"></script>\n<script type=\"text/javascript\">window.addEventListener('DOMContentLoaded',function(){var v=archive_analytics.values;v.service='wb';v.server_name='wwwb-app28.us.archive.org';v.server_ms=1471;archive_analytics.send_pageview({});});</script>\n<script type=\"text/javascript\" src=\"https://web-static.archive.org/_static/js/bundle-playback.js?v=FC38Hc5A\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\" src=\"https://web-static.archive.org/_static/js/wombat.js?v=txqj7nKC\" charset=\"utf-8\"></script>\n<script>window.RufflePlayer=window.RufflePlayer||{};window.RufflePlayer.config={\"autoplay\":\"on\",\"unmuteOverlay\":\"hidden\",\"showSwfDownload\":true};</script>\n<script type=\"text/javascript\" src=\"https://web-static.archive.org/_static/js/ruffle/ruffle.js\"></script>\n<script type=\"text/javascript\">\n    __wm.init(\"https://web.archive.org/web\");\n  __wm.wombat(\"http://msdn.microsoft.com:80/en-us/library/bb313962.aspx\",\"20100429090724\",\"https://web.archive.org/\",\"web\",\"https://web-static.archive.org/_static/\",\n\t      \"1272532044\");\n</script>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://web-static.archive.org/_static/css/banner-styles.css?v=p7PEIJWi\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://web-static.archive.org/_static/css/iconochive.css?v=3PDvdIFv\">\n<!-- End Wayback Rewrite JS Include -->\n<meta name=\"NormalizedUrl\" content=\"http://msdn.microsoft.com/en-us/library(d=robot)/bb313962(l=en-us,v=XNAGameStudio.31).aspx\"><meta name=\"VotingContextUrl\" content=\"http://msdn.microsoft.com/en-us/library(d=robot)/bb313962(l=en-us,v=XNAGameStudio.31).aspx\"><meta name=\"MN\" content=\"D1DC116B-2:07:24 AM\"><meta name=\"ms.locale\" content=\"en-us\"><meta name=\"Search.ShortId\" content=\"bb313962\"><meta name=\"MSHKeywordK\" content=\"swizzling\">\n<meta name=\"Search.MSHKeywordK\" content=\"swizzling\">\n<meta name=\"MSHKeywordK\" content=\"microcode, swizzling\">\n<meta name=\"Search.MSHKeywordK\" content=\"microcode, swizzling\">\n<meta name=\"MSHKeywordK\" content=\"microcode, vfetch instructions\">\n<meta name=\"Search.MSHKeywordK\" content=\"microcode, vfetch instructions\">\n<meta name=\"MSHKeywordK\" content=\"microcode, tfetch instructions\">\n<meta name=\"Search.MSHKeywordK\" content=\"microcode, tfetch instructions\">\n<meta name=\"MSHKeywordK\" content=\"microcode, vector ALU instructions\">\n<meta name=\"Search.MSHKeywordK\" content=\"microcode, vector ALU instructions\">\n<meta name=\"MSHKeywordK\" content=\"microcode, scalar ALU instructions\">\n<meta name=\"Search.MSHKeywordK\" content=\"microcode, scalar ALU instructions\">\n<meta name=\"MSHAttr\" content=\"AssetID:7ee7fa94-f5f3-0b1b-4031-64397efedd32\">\n<meta name=\"Search.MSHAttr.AssetID\" content=\"7ee7fa94-f5f3-0b1b-4031-64397efedd32\">\n<meta name=\"MSHAttr\" content=\"Locale:en-us\">\n<meta name=\"Search.MSHAttr.Locale\" content=\"en-us\">\n<meta name=\"MSHAttr\" content=\"CommunityContent:1\">\n<meta name=\"Search.MSHAttr.CommunityContent\" content=\"1\">\n<meta name=\"MSHAttr\" content=\"TopicType:kbOrient\">\n<meta name=\"Search.MSHAttr.TopicType\" content=\"kbOrient\">\n<meta name=\"MSHAttr\" content=\"DocSet:XNA\">\n<meta name=\"Search.MSHAttr.DocSet\" content=\"XNA\">\n<meta name=\"MSHAttr\" content=\"DocSet:ExpressLibVS\">\n<meta name=\"Search.MSHAttr.DocSet\" content=\"ExpressLibVS\">\n<meta name=\"MSHAttr\" content=\"DocSet:C#\">\n<meta name=\"Search.MSHAttr.DocSet\" content=\"C#\">\n<meta name=\"MSHAttr\" content=\"ProjType:LocalProj\">\n<meta name=\"Search.MSHAttr.ProjType\" content=\"LocalProj\">\n<meta name=\"MSHAttr\" content=\"ProjType:XNA_31\">\n<meta name=\"Search.MSHAttr.ProjType\" content=\"XNA_31\">\n<meta name=\"MSHAttr\" content=\"ProjType:XNA_30\">\n<meta name=\"Search.MSHAttr.ProjType\" content=\"XNA_30\">\n<meta name=\"MSHAttr\" content=\"Technology:XNA\">\n<meta name=\"Search.MSHAttr.Technology\" content=\"XNA\">\n<meta name=\"MSHAttr\" content=\"DocSetTitle:XNA\">\n<meta name=\"Search.MSHAttr.DocSetTitle\" content=\"XNA\">\n<meta name=\"MSHAttr\" content=\"DocSetRoot:Bb313962\">\n<meta name=\"Search.MSHAttr.DocSetRoot\" content=\"Bb313962\">\n<meta name=\"save\" content=\"history\">\n<meta name=\"Search.save\" content=\"history\">\n<meta name=\"keywords\" content=\"swizzling,microcode, swizzling,microcode, vfetch instructions,microcode, tfetch instructions,microcode, vector ALU instructions,microcode, scalar ALU instructions\">\n<meta name=\"Search.MSCategory\" content=\"ms310247\">\n<meta name=\"Search.MSCategoryV\" content=\"ms310247MSCategory10\">\n<meta name=\"Search.MSCategory\" content=\"ms310249\">\n<meta name=\"Search.MSCategoryV\" content=\"ms310249MSCategory10\">\n<meta name=\"Search.MSCategory\" content=\"ms310241\">\n<meta name=\"Search.MSCategoryV\" content=\"ms310241MSDN10\">\n<meta name=\"Search.MSCategory\" content=\"aa187916\">\n<meta name=\"Search.MSCategoryV\" content=\"aa187916MSDN10\">\n<meta name=\"Search.MSCategory\" content=\"aa468128\">\n<meta name=\"Search.MSCategoryV\" content=\"aa468128MSDN10\">\n<meta name=\"Search.MSCategory\" content=\"dd253701\">\n<meta name=\"Search.MSCategoryV\" content=\"dd253701XNAGameStudio31\">\n<meta name=\"Search.MSCategory\" content=\"dd253708\">\n<meta name=\"Search.MSCategoryV\" content=\"dd253708XNAGameStudio31\">\n<meta name=\"Search.MSCategory\" content=\"dd253710\">\n<meta name=\"Search.MSCategoryV\" content=\"dd253710XNAGameStudio31\">\n<meta name=\"Search.MSCategory\" content=\"dd282526\">\n<meta name=\"Search.MSCategoryV\" content=\"dd282526XNAGameStudio31\">\n<meta name=\"Search.MSCategory\" content=\"dd282529\">\n<meta name=\"Search.MSCategoryV\" content=\"dd282529XNAGameStudio31\">\n<meta name=\"Search.MSCategory\" content=\"bb313962\">\n<meta name=\"Search.MSCategoryV\" content=\"bb313962XNAGameStudio31\">\n<meta name=\"Search.TocNodeId\" content=\"bb313962\">\n<meta name=\"MSHAttr\" content=\"Rating:0.000\">\n<meta name=\"Search.Rating\" content=\"0\">\n<meta name=\"MSMETANRatingMSMETAV\" content=\"0\">\n<meta name=\"Search.RootTocId\" content=\"ms310241\"><meta name=\"MSHAttr\" content=\"ShippedIn:XNAGameStudio.31\"><meta name=\"Search.ShippedIn\" content=\"XNAGameStudio31\"><meta name=\"Search.GuidIdentifier\" content=\"7ee7fa94-f5f3-0b1b-4031-64397efedd32\"><link rel=\"stylesheet\" type=\"text/css\" href=\"https://web.archive.org/web/20100429090724cs_/http://i3.msdn.microsoft.com/en-us/library/mtps-bn20100413.css?l=en-us&amp;i=library&amp;ct=CollapsibleArea;CrawlerNav;InstrumentedLink;MtDisclaimer;ScriptFreeInstrumentedLink;WikiViewer&amp;clustimg=1\"><title>\n\tSwizzling (xvs_3_0, xps_3_0)\n</title></head>\n<body id=\"ctl00_body1\" dir=\"ltr\"><!-- BEGIN WAYBACK TOOLBAR INSERT -->\n<script>__wm.rw(0);</script>\n<div id=\"wm-ipp-base\" lang=\"en\" style=\"display: block; direction: ltr; height: 67px;\" toolbar-mode=\"auto\">\n</div><div id=\"wm-ipp-print\">The Wayback Machine - https://web.archive.org/web/20100429090724/http://msdn.microsoft.com:80/en-us/library/bb313962.aspx</div>\n<script type=\"text/javascript\">//<![CDATA[\n__wm.bt(750,27,25,2,\"web\",\"http://msdn.microsoft.com/en-us/library/bb313962.aspx\",\"20100429090724\",1996,\"https://web-static.archive.org/_static/\",[\"https://web-static.archive.org/_static/css/banner-styles.css?v=p7PEIJWi\",\"https://web-static.archive.org/_static/css/iconochive.css?v=3PDvdIFv\"], false);\n  __wm.rw(1);\n//]]></script>\n<!-- END WAYBACK TOOLBAR INSERT -->\n \n    <form name=\"aspnetForm\" method=\"post\" action=\"bb313962.aspx\" id=\"aspnetForm\">\n<input type=\"hidden\" name=\"__VIEWSTATE\" id=\"__VIEWSTATE\" value=\"/wEPDwUBMGRk9fo2u6sAqapv5HtNATug6rd+gms=\">\n\n\n<script src=\"https://web.archive.org/web/20100429090724js_/http://i2.msdn.microsoft.com/platform/cjs/extract/compositejscript2.js\" type=\"text/javascript\"></script>\n    \n    <div>\n        \n        <!--starting processing--><div class=\"topic\"><div class=\"majorTitle\">XNA Game Studio 3.1<!----></div><div class=\"title\">Swizzling (xvs_3_0, xps_3_0)<!----></div><!--Content type: DocStudio. Transform: devdiv2mtps.xslt.--><div id=\"mainSection\"><div id=\"mainBody\">\n  \n  \n  <p>\n    Swizzling is a way of specifying which inputs go to what channels and only applies to input registers. There are four different types of swizzling, based on the instruction type.</p>\n  <ul><li><a href=\"#vfetch\">vfetch Instructions</a></li><li><a href=\"#tfetch\">tfetch Instructions</a></li><li><a href=\"#vector\">Vector ALU Instructions</a></li><li><a href=\"#scalar\">Scalar ALU Instructions</a></li></ul>\n  <a id=\"vfetch\"><!----></a><h1 class=\"heading\">vfetch Instructions</h1><div id=\"vfetch1\" class=\"hxnx1\">\n    \n    <p>The one-component swizzle for <strong>vfetch</strong> instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}</pre>\n   </div>\n  <a id=\"tfetch\"><!----></a><h1 class=\"heading\">tfetch Instructions</h1><div id=\"tfetch1\" class=\"hxnx1\">\n    \n    <p>There are four <strong>tfetch</strong> instructions. The swizzling for these instructions is used to indicate the components of the source register to use for the texture lookup. Each instruction is of the following form.</p>\n    <pre>tfetch <em>dest</em>, <em>src</em>, <em>fetchConst</em></pre>\n    <a id=\"ID4E6B\"><!----></a><h2 class=\"subHeading\">tfetch1D</h2><div id=\"ID4E6B1\" class=\"hxnx2\">\n      \n      <p>The <a id=\"ctl00_ContentPlaceHolder1_ctl01\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx\">tfetch1D</a> instruction performs a 1D texture lookup. The <em>src</em> register must have a one-component swizzle. For example, <em>src</em> might be r4.x. The swizzle (\".x\" in this case) indicates that the texture coordinate comes from the x-component of the r4 register.</p>\n      <p>The one-component swizzle for the <a id=\"ctl00_ContentPlaceHolder1_ctl02\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx\">tfetch1D</a> instruction is always of the following form.</p>\n     <pre><em>src</em>.{x|y|z|w}</pre>\n   </div>\n    <a id=\"ID4EYC\"><!----></a><h2 class=\"subHeading\">tfetch2D</h2><div id=\"ID4EYC1\" class=\"hxnx2\">\n      \n     <p>The <a id=\"ctl00_ContentPlaceHolder1_ctl03\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx\">tfetch2D</a> instruction performs a 2D texture lookup. The <em>src</em> register must have a two-component swizzle. For example, <em>src</em> might be r4.wx. The swizzle (\".wx\" in this case) indicates that the w- and x-components are used to lookup the U and V texture coordinates, respectively.</p>\n      <p>The two-component swizzle for the <a id=\"ctl00_ContentPlaceHolder1_ctl04\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx\">tfetch2D</a> instruction is always of the following form.</p>\n      <pre><em>src</em>.{x|y|z|w}{x|y|z|w}</pre>\n    </div>\n    <a id=\"ID4ERD\"><!----></a><h2 class=\"subHeading\">tfetch3D and tfetchCube</h2><div id=\"ID4ERD1\" class=\"hxnx2\">\n      \n      <p>The <a id=\"ctl00_ContentPlaceHolder1_ctl05\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313958.aspx\">tfetch3D</a> instruction performs a 3D texture lookup. The <a id=\"ctl00_ContentPlaceHolder1_ctl06\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313959.aspx\">tfetchCube</a> instruction performs a cube texture lookup. The <em>src</em> register must have a three-component swizzle. For example, <em>src</em> might be r4.wxz. The swizzle (\".wxz\" in this case) indicates that the w-, x- and z-components are used to lookup the u, v and w texture coordinates, respectively.</p>\n      <p>The three-component swizzle for these two instructions is always of the following form.</p>\n      <pre><em>src</em>.{x|y|z|w}{x|y|z|w}{x|y|z|w}</pre>\n    </div>\n  </div>\n  <a id=\"vector\"><!----></a><h1 class=\"heading\">Vector ALU Instructions</h1><div id=\"vector1\" class=\"hxnx1\">\n    \n   <p>Every <a id=\"ctl00_ContentPlaceHolder1_ctl07\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313916.aspx\">vector ALU instruction</a> may make use of an optional four-component swizzle. This swizzle allows individual components of the source register to temporarily take on the value of any of the four components of the same register, before that register is read for computation. The contents of the source register are not modified by the swizzle.</p>\n    <p>The four-component swizzle for the vector ALU instructions is always of the following form.</p>\n    <pre><em>src</em>[.{x|y|z|w}[x|y|z|w][x|y|z|w][x|y|z|w]]</pre>\n    <p>The first optional block specifies the x-component, the second optional block specifies the y-component, and so on. For example, the .zxxy swizzle means:</p>\n   <ul>\n      <li>The x-component will temporarily take on the value of the z-component.</li>\n      <li>The y-component will temporarily take on the value of the x-component.</li>\n      <li>The z-component will temporarily take on the value of the x-component.</li>\n      <li>The w-component will temporarily take on the value of the y-component.</li>\n    </ul>\n    <p>Components can appear in any order. If fewer than four components are specified, the last component is repeated. For example, .xy is the same as .xyyy, .wzx is the same as .wzxx, and .z is the same as .zzzz. If no components are specified, no swizzling occurs. No swizzling is the same as .xyzw.</p>\n  </div>\n  <a id=\"scalar\"><!----></a><h1 class=\"heading\">Scalar ALU Instructions</h1><div id=\"scalar1\" class=\"hxnx1\">\n    \n    <p>Every <a id=\"ctl00_ContentPlaceHolder1_ctl08\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313879.aspx\">scalar ALU instruction</a> requires either a one- or two-component swizzle that indicates the components to use for the scalar operation. Almost all scalar ALU instructions operate on a single component of the source register. These scalar instructions make use of a one-component swizzle. Consider the following example.</p>\n    <pre>cos r4, r3.y</pre>\n    <p>The \".y\" swizzle on the source register tells the scalar instruction to use compute the cosine of the y-component of r3.</p>\n    <p>The one-component swizzle for the scalar ALU instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}</pre>\n    <p>There are six scalar ALU instructions that operate on two components of their source register.</p>\n    <ul>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl09\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313880.aspx\">adds</a></li>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl10\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313891.aspx\">maxs</a></li>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl11\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313892.aspx\">mins</a></li>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl12\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313896.aspx\">muls</a></li>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl13\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313898.aspx\">muls_prev2</a></li>\n      <li><a id=\"ctl00_ContentPlaceHolder1_ctl14\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313913.aspx\">subs</a></li>\n    </ul>\n    <p>These six instructions require a two-component swizzle that indicates the components to use. Consider the following example.</p>\n    <pre>subs r4, r3.zx</pre>\n    <p>The \".zx\" swizzle on the source register tells the scalar instruction to compute the difference of r3.z and r3.x.</p>\n    <p>The two-component swizzle for the scalar ALU instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}{x|y|z|w}</pre>\n    <p>The first mandatory component indicates the first operand for the instruction. The second mandatory component indicates the second operand for the instruction.</p>\n  </div>\n  <a id=\"ID4EMH\"><!----></a><span>\n<div class=\"regionArea\">\n<span class=\"regiontitle\" style=\"white-space:nowrap\">See Also</span><div class=\"hrdiv\"><hr class=\"regionhr\"></div></div>\n<a id=\"seeAlsoToggle\"><!----></a>\n    <a id=\"ID4EOH\"><!----></a><h4 class=\"subHeading\">Concepts</h4><div id=\"ID4EOH1\" class=\"hxnx3\">\n      \n      <a id=\"ctl00_ContentPlaceHolder1_ctl34_ctl00_ctl00\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313871.aspx\">Inline Microcode Assembly in HLSL</a><br>\n      <a id=\"ctl00_ContentPlaceHolder1_ctl34_ctl00_ctl01\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313874.aspx\">Vertex Fetching in HLSL (xvs_3_0, xps_3_0)</a><br>\n      <a id=\"ctl00_ContentPlaceHolder1_ctl34_ctl00_ctl02\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313873.aspx\">Texture Fetching in HLSL (xvs_3_0, xps_3_0)</a><br>\n    </div>\n    <a id=\"ID4E3H\"><!----></a><h4 class=\"subHeading\">Reference</h4><div id=\"ID4E3H1\" class=\"hxnx3\">\n      \n      <a id=\"ctl00_ContentPlaceHolder1_ctl34_ctl00_ctl03\" href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313961.aspx\">Microcode Instructions (xvs_3_0, xps_3_0)</a><br>\n    </div>\n  </span>\n</div></div></div>\n        <hr><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/ms123401.aspx\">MSDN Library</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa187916.aspx\">Development Tools and Languages</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa468128.aspx\">XNA Game Studio</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb200104.aspx\">XNA Game Studio 3.1</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb198548.aspx\">Programming Guide</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb975657.aspx\">Hardware and Platforms</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb417501.aspx\">Xbox 360 Programming</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313877.aspx\">Microcode (xvs_3_0, xps_3_0)</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx\">Swizzling (xvs_3_0, xps_3_0)</a><hr>       \n    </div>\n    <div id=\"ctl00_WikiViewer1_cc\" class=\"wv_cc\">\n\t\n    <div id=\"ctl00_WikiViewer1_ccContainer\">\n\t\t<div class=\"wv_ccTopicTags\">\n\t\t\t<span class=\"wv_ccTitle\">Tags:&nbsp;</span><span></span>\n\t\t</div>\n        &nbsp;\n        <div class=\"wv_cclogo\">\n\t        <img id=\"ctl00_WikiViewer1_WikiLogo\" src=\"https://web.archive.org/web/20100429090724im_/http://i.msdn.microsoft.com/Global/Images/wiki.gif\" border=\"0\">\n        </div>\n        <div class=\"wv_cch\">\n           <span id=\"ctl00_WikiViewer1_CC_Title\">Community Content</span>\n        </div>\n    \n\t</div>\n\n</div>\n<div id=\"ctl00_WikiViewer1_wikiItems\">\n\n</div>\n       <script type=\"text/javascript\" src=\"https://web.archive.org/web/20100429090724js_/http://i2.msdn.microsoft.com/en-us/library/mtps-bn20100413.js?l=en-us&amp;i=library&amp;ct=CollapsibleArea;CrawlerNav;InstrumentedLink;MtDisclaimer;ScriptFreeInstrumentedLink;WikiViewer\"></script>  \n    \n\n<script type=\"text/javascript\">\n//<![CDATA[\nSys.Application.initialize();\n//]]>\n</script>\n</form>\n\n\n\n</body></html>",
  "cleaned_html": "<html>\n<head>\n<!-- End Wayback Rewrite JS Include -->\n<title>\n\tSwizzling (xvs_3_0, xps_3_0)\n</title>\n</head>\n<body>\n<!-- BEGIN WAYBACK TOOLBAR INSERT -->\n<div>The Wayback Machine - https://web.archive.org/web/20100429090724/http://msdn.microsoft.com:80/en-us/library/bb313962.aspx</div>\n<!-- END WAYBACK TOOLBAR INSERT -->\n \n    <form>\n<input>\n\n\n<div>\n        \n        <!--starting processing--><div>\n<div>XNA Game Studio 3.1<!---->\n</div>\n<div>Swizzling (xvs_3_0, xps_3_0)<!---->\n</div>\n<!--Content type: DocStudio. Transform: devdiv2mtps.xslt.--><div><div>\n  \n  \n  <p>\n    Swizzling is a way of specifying which inputs go to what channels and only applies to input registers. There are four different types of swizzling, based on the instruction type.</p>\n  <ul>\n<li><a href=\"#vfetch\">vfetch Instructions</a></li>\n<li><a href=\"#tfetch\">tfetch Instructions</a></li>\n<li><a href=\"#vector\">Vector ALU Instructions</a></li>\n<li><a href=\"#scalar\">Scalar ALU Instructions</a></li>\n</ul>\n  <a><!----></a><h1>vfetch Instructions</h1>\n<div>\n    \n    <p>The one-component swizzle for <strong>vfetch</strong> instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}</pre>\n   </div>\n  <a><!----></a><h1>tfetch Instructions</h1>\n<div>\n    \n    <p>There are four <strong>tfetch</strong> instructions. The swizzling for these instructions is used to indicate the components of the source register to use for the texture lookup. Each instruction is of the following form.</p>\n    <pre>tfetch <em>dest</em>, <em>src</em>, <em>fetchConst</em></pre>\n    <a><!----></a><h2>tfetch1D</h2>\n<div>\n      \n      <p>The <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx\">tfetch1D</a> instruction performs a 1D texture lookup. The <em>src</em> register must have a one-component swizzle. For example, <em>src</em> might be r4.x. The swizzle (\".x\" in this case) indicates that the texture coordinate comes from the x-component of the r4 register.</p>\n      <p>The one-component swizzle for the <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx\">tfetch1D</a> instruction is always of the following form.</p>\n     <pre><em>src</em>.{x|y|z|w}</pre>\n   </div>\n    <a><!----></a><h2>tfetch2D</h2>\n<div>\n      \n     <p>The <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx\">tfetch2D</a> instruction performs a 2D texture lookup. The <em>src</em> register must have a two-component swizzle. For example, <em>src</em> might be r4.wx. The swizzle (\".wx\" in this case) indicates that the w- and x-components are used to lookup the U and V texture coordinates, respectively.</p>\n      <p>The two-component swizzle for the <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx\">tfetch2D</a> instruction is always of the following form.</p>\n      <pre><em>src</em>.{x|y|z|w}{x|y|z|w}</pre>\n    </div>\n    <a><!----></a><h2>tfetch3D and tfetchCube</h2>\n<div>\n      \n      <p>The <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313958.aspx\">tfetch3D</a> instruction performs a 3D texture lookup. The <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313959.aspx\">tfetchCube</a> instruction performs a cube texture lookup. The <em>src</em> register must have a three-component swizzle. For example, <em>src</em> might be r4.wxz. The swizzle (\".wxz\" in this case) indicates that the w-, x- and z-components are used to lookup the u, v and w texture coordinates, respectively.</p>\n      <p>The three-component swizzle for these two instructions is always of the following form.</p>\n      <pre><em>src</em>.{x|y|z|w}{x|y|z|w}{x|y|z|w}</pre>\n    </div>\n  </div>\n  <a><!----></a><h1>Vector ALU Instructions</h1>\n<div>\n    \n   <p>Every <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313916.aspx\">vector ALU instruction</a> may make use of an optional four-component swizzle. This swizzle allows individual components of the source register to temporarily take on the value of any of the four components of the same register, before that register is read for computation. The contents of the source register are not modified by the swizzle.</p>\n    <p>The four-component swizzle for the vector ALU instructions is always of the following form.</p>\n    <pre><em>src</em>[.{x|y|z|w}[x|y|z|w][x|y|z|w][x|y|z|w]]</pre>\n    <p>The first optional block specifies the x-component, the second optional block specifies the y-component, and so on. For example, the .zxxy swizzle means:</p>\n   <ul>\n      <li>The x-component will temporarily take on the value of the z-component.</li>\n      <li>The y-component will temporarily take on the value of the x-component.</li>\n      <li>The z-component will temporarily take on the value of the x-component.</li>\n      <li>The w-component will temporarily take on the value of the y-component.</li>\n    </ul>\n    <p>Components can appear in any order. If fewer than four components are specified, the last component is repeated. For example, .xy is the same as .xyyy, .wzx is the same as .wzxx, and .z is the same as .zzzz. If no components are specified, no swizzling occurs. No swizzling is the same as .xyzw.</p>\n  </div>\n  <a><!----></a><h1>Scalar ALU Instructions</h1>\n<div>\n    \n    <p>Every <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313879.aspx\">scalar ALU instruction</a> requires either a one- or two-component swizzle that indicates the components to use for the scalar operation. Almost all scalar ALU instructions operate on a single component of the source register. These scalar instructions make use of a one-component swizzle. Consider the following example.</p>\n    <pre>cos r4, r3.y</pre>\n    <p>The \".y\" swizzle on the source register tells the scalar instruction to use compute the cosine of the y-component of r3.</p>\n    <p>The one-component swizzle for the scalar ALU instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}</pre>\n    <p>There are six scalar ALU instructions that operate on two components of their source register.</p>\n    <ul>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313880.aspx\">adds</a></li>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313891.aspx\">maxs</a></li>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313892.aspx\">mins</a></li>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313896.aspx\">muls</a></li>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313898.aspx\">muls_prev2</a></li>\n      <li><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313913.aspx\">subs</a></li>\n    </ul>\n    <p>These six instructions require a two-component swizzle that indicates the components to use. Consider the following example.</p>\n    <pre>subs r4, r3.zx</pre>\n    <p>The \".zx\" swizzle on the source register tells the scalar instruction to compute the difference of r3.z and r3.x.</p>\n    <p>The two-component swizzle for the scalar ALU instructions is always of the following form.</p>\n    <pre><em>src</em>.{x|y|z|w}{x|y|z|w}</pre>\n    <p>The first mandatory component indicates the first operand for the instruction. The second mandatory component indicates the second operand for the instruction.</p>\n  </div>\n  <a><!----></a><span>\n<div>\n<span>See Also</span><div><hr></div>\n</div>\n<a><!----></a>\n    <a><!----></a><h4>Concepts</h4>\n<div>\n      \n      <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313871.aspx\">Inline Microcode Assembly in HLSL</a><br>\n      <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313874.aspx\">Vertex Fetching in HLSL (xvs_3_0, xps_3_0)</a><br>\n      <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313873.aspx\">Texture Fetching in HLSL (xvs_3_0, xps_3_0)</a><br>\n    </div>\n    <a><!----></a><h4>Reference</h4>\n<div>\n      \n      <a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313961.aspx\">Microcode Instructions (xvs_3_0, xps_3_0)</a><br>\n    </div>\n  </span>\n</div></div>\n</div>\n        <hr>\n<br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/ms123401.aspx\">MSDN Library</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa187916.aspx\">Development Tools and Languages</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa468128.aspx\">XNA Game Studio</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb200104.aspx\">XNA Game Studio 3.1</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb198548.aspx\">Programming Guide</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb975657.aspx\">Hardware and Platforms</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb417501.aspx\">Xbox 360 Programming</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313877.aspx\">Microcode (xvs_3_0, xps_3_0)</a><br><a href=\"https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx\">Swizzling (xvs_3_0, xps_3_0)</a><hr>       \n    </div>\n    <div>\n\t\n    <div>\n\t\t<div>\n\t\t\t<span>Tags: </span>\n</div>\n         \n        <div>\n\t        <img src=\"https://web.archive.org/web/20100429090724im_/http://i.msdn.microsoft.com/Global/Images/wiki.gif\">\n        </div>\n        <div>\n           <span>Community Content</span>\n        </div>\n    \n\t</div>\n\n</div>\n</form>\n\n\n\n</body>\n</html>",
  "markdown": "The Wayback Machine - https://web.archive.org/web/20100429090724/http://msdn.microsoft.com:80/en-us/library/bb313962.aspx\nXNA Game Studio 3.1\nSwizzling (xvs_3_0, xps_3_0)\nSwizzling is a way of specifying which inputs go to what channels and only applies to input registers. There are four different types of swizzling, based on the instruction type.\n  * [vfetch Instructions](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx#vfetch)\n  * [tfetch Instructions](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx#tfetch)\n  * [Vector ALU Instructions](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx#vector)\n  * [Scalar ALU Instructions](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx#scalar)\n\n\n# vfetch Instructions\nThe one-component swizzle for **vfetch** instructions is always of the following form.\n```\n_src_.{x|y|z|w}\n```\n\n# tfetch Instructions\nThere are four **tfetch** instructions. The swizzling for these instructions is used to indicate the components of the source register to use for the texture lookup. Each instruction is of the following form.\n```\ntfetch _dest_, _src_, _fetchConst_\n```\n\n## tfetch1D\nThe [tfetch1D](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx) instruction performs a 1D texture lookup. The _src_ register must have a one-component swizzle. For example, _src_ might be r4.x. The swizzle (\".x\" in this case) indicates that the texture coordinate comes from the x-component of the r4 register.\nThe one-component swizzle for the [tfetch1D](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313956.aspx) instruction is always of the following form.\n```\n_src_.{x|y|z|w}\n```\n\n## tfetch2D\nThe [tfetch2D](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx) instruction performs a 2D texture lookup. The _src_ register must have a two-component swizzle. For example, _src_ might be r4.wx. The swizzle (\".wx\" in this case) indicates that the w- and x-components are used to lookup the U and V texture coordinates, respectively.\nThe two-component swizzle for the [tfetch2D](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313957.aspx) instruction is always of the following form.\n```\n_src_.{x|y|z|w}{x|y|z|w}\n```\n\n## tfetch3D and tfetchCube\nThe [tfetch3D](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313958.aspx) instruction performs a 3D texture lookup. The [tfetchCube](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313959.aspx) instruction performs a cube texture lookup. The _src_ register must have a three-component swizzle. For example, _src_ might be r4.wxz. The swizzle (\".wxz\" in this case) indicates that the w-, x- and z-components are used to lookup the u, v and w texture coordinates, respectively.\nThe three-component swizzle for these two instructions is always of the following form.\n```\n_src_.{x|y|z|w}{x|y|z|w}{x|y|z|w}\n```\n\n# Vector ALU Instructions\nEvery [vector ALU instruction](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313916.aspx) may make use of an optional four-component swizzle. This swizzle allows individual components of the source register to temporarily take on the value of any of the four components of the same register, before that register is read for computation. The contents of the source register are not modified by the swizzle.\nThe four-component swizzle for the vector ALU instructions is always of the following form.\n```\n_src_[.{x|y|z|w}[x|y|z|w][x|y|z|w][x|y|z|w]]\n```\n\nThe first optional block specifies the x-component, the second optional block specifies the y-component, and so on. For example, the .zxxy swizzle means:\n  * The x-component will temporarily take on the value of the z-component.\n  * The y-component will temporarily take on the value of the x-component.\n  * The z-component will temporarily take on the value of the x-component.\n  * The w-component will temporarily take on the value of the y-component.\n\n\nComponents can appear in any order. If fewer than four components are specified, the last component is repeated. For example, .xy is the same as .xyyy, .wzx is the same as .wzxx, and .z is the same as .zzzz. If no components are specified, no swizzling occurs. No swizzling is the same as .xyzw.\n# Scalar ALU Instructions\nEvery [scalar ALU instruction](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313879.aspx) requires either a one- or two-component swizzle that indicates the components to use for the scalar operation. Almost all scalar ALU instructions operate on a single component of the source register. These scalar instructions make use of a one-component swizzle. Consider the following example.\n```\ncos r4, r3.y\n```\n\nThe \".y\" swizzle on the source register tells the scalar instruction to use compute the cosine of the y-component of r3.\nThe one-component swizzle for the scalar ALU instructions is always of the following form.\n```\n_src_.{x|y|z|w}\n```\n\nThere are six scalar ALU instructions that operate on two components of their source register.\n  * [adds](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313880.aspx)\n  * [maxs](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313891.aspx)\n  * [mins](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313892.aspx)\n  * [muls](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313896.aspx)\n  * [muls_prev2](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313898.aspx)\n  * [subs](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313913.aspx)\n\n\nThese six instructions require a two-component swizzle that indicates the components to use. Consider the following example.\n```\nsubs r4, r3.zx\n```\n\nThe \".zx\" swizzle on the source register tells the scalar instruction to compute the difference of r3.z and r3.x.\nThe two-component swizzle for the scalar ALU instructions is always of the following form.\n```\n_src_.{x|y|z|w}{x|y|z|w}\n```\n\nThe first mandatory component indicates the first operand for the instruction. The second mandatory component indicates the second operand for the instruction.\nSee Also\n* * *\n#### Concepts\n[Inline Microcode Assembly in HLSL](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313871.aspx)  \n[Vertex Fetching in HLSL (xvs_3_0, xps_3_0)](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313874.aspx)  \n[Texture Fetching in HLSL (xvs_3_0, xps_3_0)](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313873.aspx)  \n\n#### Reference\n[Microcode Instructions (xvs_3_0, xps_3_0)](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313961.aspx)  \n\n* * *\n  \n[MSDN Library](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/ms123401.aspx)  \n[Development Tools and Languages](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa187916.aspx)  \n[XNA Game Studio](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/aa468128.aspx)  \n[XNA Game Studio 3.1](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb200104.aspx)  \n[Programming Guide](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb198548.aspx)  \n[Hardware and Platforms](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb975657.aspx)  \n[Xbox 360 Programming](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb417501.aspx)  \n[Microcode (xvs_3_0, xps_3_0)](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313877.aspx)  \n[Swizzling (xvs_3_0, xps_3_0)](https://web.archive.org/web/20100429090724/http://msdn.microsoft.com/en-us/library/bb313962.aspx)\n* * *\nTags: \n![](https://web.archive.org/web/20100429090724im_/http://i.msdn.microsoft.com/Global/Images/wiki.gif)\nCommunity Content\n",
  "metadata": {
    "title": "Swizzling (xvs_3_0, xps_3_0)",
    "description": null,
    "keywords": "swizzling,microcode, swizzling,microcode, vfetch instructions,microcode, tfetch instructions,microcode, vector ALU instructions,microcode, scalar ALU instructions",
    "author": null
  },
  "links": {
    "internal": [
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313962.aspx",
        "text": "vfetch Instructions",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313956.aspx",
        "text": "tfetch1D",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313957.aspx",
        "text": "tfetch2D",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313958.aspx",
        "text": "tfetch3D",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313959.aspx",
        "text": "tfetchCube",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313916.aspx",
        "text": "vector ALU instruction",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313879.aspx",
        "text": "scalar ALU instruction",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313880.aspx",
        "text": "adds",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313891.aspx",
        "text": "maxs",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313892.aspx",
        "text": "mins",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313896.aspx",
        "text": "muls",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313898.aspx",
        "text": "muls_prev2",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313913.aspx",
        "text": "subs",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313871.aspx",
        "text": "Inline Microcode Assembly in HLSL",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313874.aspx",
        "text": "Vertex Fetching in HLSL (xvs_3_0, xps_3_0)",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313873.aspx",
        "text": "Texture Fetching in HLSL (xvs_3_0, xps_3_0)",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313961.aspx",
        "text": "Microcode Instructions (xvs_3_0, xps_3_0)",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/ms123401.aspx",
        "text": "MSDN Library",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/aa187916.aspx",
        "text": "Development Tools and Languages",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/aa468128.aspx",
        "text": "XNA Game Studio",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb200104.aspx",
        "text": "XNA Game Studio 3.1",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb198548.aspx",
        "text": "Programming Guide",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb975657.aspx",
        "text": "Hardware and Platforms",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb417501.aspx",
        "text": "Xbox 360 Programming",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      },
      {
        "href": "https://web.archive.org/web/20100429090724/http%3A//msdn.microsoft.com/en-us/library/bb313877.aspx",
        "text": "Microcode (xvs_3_0, xps_3_0)",
        "title": "",
        "base_domain": "archive.org",
        "head_data": null,
        "head_extraction_status": null,
        "head_extraction_error": null,
        "intrinsic_score": 0.0,
        "contextual_score": null,
        "total_score": null
      }
    ],
    "external": []
  },
  "media": {
    "images": [],
    "videos": [],
    "audios": []
  },
  "word_count": 784
}